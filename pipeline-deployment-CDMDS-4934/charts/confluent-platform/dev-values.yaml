namespace: cdm-kafka

secrets:
  credential: credential
  mdsClientErp: mds-client-erp
  mdsClientSr: mds-client-sr
  mdsToken: mds-token
  restCredential: rest-credential

kafka:
  name: kafka
  replicas: 3
  dataVolumeCapacity: 100Gi
  license:
    secretRef: confluent-operator-licensing
  image:
    application: docker.io/confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  configOverrides:
    server:
      - "message.max.bytes=10485760"
      - "replica.fetch.max.bytes=10485760"
      - "socket.receive.buffer.bytes=8388608"
      - "socket.send.buffer.bytes=8388608"
      - "auto.create.topics.enable=false"
    jvm:
      - "-XX:+UseContainerSupport"
      - "-XX:MaxRAMPercentage=50.0"
    log4j:
      - "log4j.appender.stdout.layout.ConversionPattern=%d %p %c: [%t]: %m%n"
  authorization:
    type: rbac
    superUsers:
      - User:kafka
      - User:mds
      - User:operator
  dependencies:
    kraftController:
      clusterRef:
        name: kraftcontroller
      controllerListener:
        authentication:
          type: plain
          jaasConfig:
            secretRef: credential
        tls:
          enabled: true
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client-erp
  listeners:
    internal:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    external:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    replication:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  services:
    mds:
      provider:
        type: ldap
        ldap:
          address: ldap://ldap.cdm-kafka.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: credential
          configurations:
            groupMemberAttribute: member
            groupMemberAttributePattern: CN=(.*),DC=cdm,DC=gov
            groupNameAttribute: cn
            groupObjectClass: group
            groupSearchBase: dc=cdm,dc=gov
            userMemberOfAttributePattern: CN=(.*),DC=cdm,DC=gov
            userNameAttribute: cn
            userObjectClass: organizationalRole
            userSearchBase: dc=cdm,dc=gov
          tls:
            enabled: true
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
  podTemplate:
    annotations:
      elastic.co/dataset: "kafka.log"
      elastic.co/namespace: "default"
      elastic.co/preserve_original_event: "true"
  tls:
    autoGeneratedCerts: true

restclass:
  name: primary
  kafkaClusterRef:
    name: kafka
  authentication:
    type: bearer
    bearer:
      secretRef: rest-credential
  annotations:
    secret.reloader.stakater.com/reload: "rest-credential"

kraft:
  replicas: 3
  image:
    application: docker.io/confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  license:
    secretRef: confluent-operator-licensing
  authorization:
    type: rbac
    superUsers:
      - User:kafka
      - User:mds
      - User:operator
  configOverrides:
    log4j:
      - "log4j.appender.stdout.layout.ConversionPattern=%d %p %c: [%t]: %m%n"
  dataVolumeCapacity: 20G
  listeners:
    controller:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  dependencies:
    mdsKafkaCluster:
      bootstrapEndpoint: kafka.cdm-kafka.svc.cluster.local:9092
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  podTemplate:
    annotations:
      elastic.co/dataset: "kraft.log"
      elastic.co/namespace: "default"
      elastic.co/preserve_original_event: "true"
  tls:
    autoGeneratedCerts: true

schemaregistry:
  image:
    application: confluentinc/cp-schema-registry:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  license:
    secretRef: confluent-operator-licensing
  replicas: 1
  authorization:
    type: rbac
    kafkaRestClassRef:
      name: primary
  configOverrides:
    server:
      - "confluent.schema.registry.anonymous.principal=true"
      - "authentication.skip.paths=/*"
    log4j:
      - "log4j.appender.stdout.layout.ConversionPattern=%d %p %c: [%t]: %m%n"
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.cdm-kafka.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.cdm-kafka.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client-sr
      tls:
        enabled: true
  podTemplate:
    annotations:
      elastic.co/dataset: "schemaregistry.log"
      elastic.co/namespace: "default"
      elastic.co/preserve_original_event: "true"
  tls:
    autoGeneratedCerts: true